version: '3.9'

services:
  db:
    image: postgres:14.2-alpine
    environment:
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: chatrooms
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 3
  rabbitmq:
    image: rabbitmq:3.8-management-alpine
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: rabbitmq
      RABBITMQ_DEFAULT_PASS: rabbitmq
      RABBITMQ_DEFAULT_VHOST: /
    ports:
      - "15672:15672"
      - "5672:5672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 3
  botbackend:
    build:
      context: .
      dockerfile: backend/src/JobSity.Chatroom.Bot.API/Dockerfile
    ports:
      - "5157:80"
    depends_on:
      rabbitmq:
        condition: service_healthy
  backend:
    build:
      context: .
      dockerfile: backend/src/JobSity.Chatroom.API/Dockerfile
    ports:
      - "7154:443"
      - "5111:80"
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_healthy
  frontend:
    build: ./frontend/JobSity.Chatroom.UI
    ports:
      - "4200:4200"
    depends_on:
      - backend
    environment:
      - CHOKIDAR_USEPOLLING=true

  wait-for-rabbitmq:
    image: busybox
    depends_on:
      rabbitmq:
        condition: service_healthy
    command: ["sh", "-c", "echo waiting... && sleep 30"]